// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package pgdb

import (
	"database/sql"
	"time"
)

type Entitlement struct {
	UserID       string       `json:"userId"`
	ProExpiresAt sql.NullTime `json:"proExpiresAt"`
	UpdatedAt    time.Time    `json:"updatedAt"`
}

type InviteCode struct {
	ID         int64      `json:"id"`
	Code       string     `json:"code"`
	CodeHash   string     `json:"codeHash"`
	BoundEmail *string    `json:"boundEmail"`
	CreatedBy  int64      `json:"createdBy"`
	IsUsed     bool       `json:"isUsed"`
	RedeemedBy *string    `json:"redeemedBy"`
	RedeemedAt *time.Time `json:"redeemedAt"`
	ExpiresAt  *time.Time `json:"expiresAt"`
	IsActive   bool       `json:"isActive"`
	CreatedAt  time.Time  `json:"createdAt"`
	UpdatedAt  time.Time  `json:"updatedAt"`
	DeletedAt  *time.Time `json:"deletedAt"`
}

type RequestLog struct {
	ID               int64         `json:"id"`
	UserID           string        `json:"userId"`
	Endpoint         string        `json:"endpoint"`
	Model            *string       `json:"model"`
	Provider         string        `json:"provider"`
	CreatedAt        time.Time     `json:"createdAt"`
	PromptTokens     sql.NullInt32 `json:"promptTokens"`
	CompletionTokens sql.NullInt32 `json:"completionTokens"`
	TotalTokens      sql.NullInt32 `json:"totalTokens"`
}

type TelegramChat struct {
	ID        int64     `json:"id"`
	ChatID    int64     `json:"chatId"`
	ChatUuid  string    `json:"chatUuid"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type UserRequestCountsDaily struct {
	UserID       string    `json:"userId"`
	DayBucket    time.Time `json:"dayBucket"`
	RequestCount int64     `json:"requestCount"`
}

type UserTokenUsageDaily struct {
	UserID                string    `json:"userId"`
	DayBucket             time.Time `json:"dayBucket"`
	RequestCount          int64     `json:"requestCount"`
	TotalPromptTokens     int64     `json:"totalPromptTokens"`
	TotalCompletionTokens int64     `json:"totalCompletionTokens"`
	TotalTokensUsed       int64     `json:"totalTokensUsed"`
}
