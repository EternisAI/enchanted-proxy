admin:
  address:
    pipe:
      path: '@envoy/admin'
bootstrap_extensions:
- name: envoy.bootstrap.internal_listener
  typed_config:
    '@type': type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener
overload_manager:
  resource_monitors:
  - name: envoy.resource_monitors.global_downstream_max_connections
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
      max_active_downstream_connections: 1048576
static_resources:
  listeners:
  # transparent proxy status listener
  - name: status
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 9101
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: status
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: main
            virtual_hosts:
            - name: default
              domains:
              - '*'
              routes:
              - name: healthz
                match:
                  path: /healthz/ready
                direct_response:
                  status: 200
              - name: metricss
                match:
                  path: /stats/prometheus
                route:
                  cluster: admin
                  timeout: 0s
  # transparent proxy egress listeners
  - name: egress_https
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: tcp_proxy
          cluster: enclaver_odyn_egress
          tunneling_config:
            hostname: '%REQUESTED_SERVER_NAME%:443'
          access_log: &access_log_tcp
          - name: envoy.access_loggers.file
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              logFormat:
                jsonFormat:
                  bytes_received: '%BYTES_RECEIVED%'
                  bytes_sent: '%BYTES_SENT%'
                  connection_termination_details: '%CONNECTION_TERMINATION_DETAILS%'
                  downstream_local_address: '%DOWNSTREAM_LOCAL_ADDRESS%'
                  downstream_remote_address: '%DOWNSTREAM_DIRECT_REMOTE_ADDRESS%'
                  downstream_wire_bytes_received: '%DOWNSTREAM_WIRE_BYTES_RECEIVED%'
                  downstream_wire_bytes_sent: '%DOWNSTREAM_WIRE_BYTES_SENT%'
                  duration: '%DURATION%'
                  requested_server_name: '%REQUESTED_SERVER_NAME%'
                  route_name: '%ROUTE_NAME%'
                  start_time: '%START_TIME%'
                  upstream_cluster: '%UPSTREAM_CLUSTER%'
                  upstream_host: '%UPSTREAM_HOST%'
                  upstream_local_address: '%UPSTREAM_LOCAL_ADDRESS%'
                  upstream_request_attempt_count: '%UPSTREAM_REQUEST_ATTEMPT_COUNT%'
                  upstream_wire_bytes_received: '%UPSTREAM_WIRE_BYTES_RECEIVED%'
                  upstream_wire_bytes_sent: '%UPSTREAM_WIRE_BYTES_SENT%'
          access_log_options:
            flush_access_log_on_connected: true
  # demo deepresearch endpoint (temporary)
  - name: egress_deepresearch
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 3031
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: tcp_proxy
          cluster: enclaver_odyn_egress
          tunneling_config:
            hostname: '%DOWNSTREAM_DIRECT_REMOTE_ADDRESS_WITHOUT_PORT%:3031'
          access_log: *access_log_tcp
          access_log_options:
            flush_access_log_on_connected: true
  # internal inference endpoints
  - name: internal_glm-46
    internal_listener: {}
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: tcp_proxy
          cluster: enclaver_odyn_egress
          tunneling_config:
            hostname: glm-46.llm.eternisai.net:443
  - name: egress_glm-46
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 20001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: http_proxy
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: main
            virtual_hosts:
            - name: default
              domains:
              - '*'
              routes:
              - name: default
                match:
                  prefix: /
                route:
                  cluster: internal_glm-46
  - name: egress_postgresql
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 5432
    filter_chains:
    - filters:
      - name: envoy.filters.network.tcp_proxy
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          stat_prefix: tcp_proxy
          cluster: enclaver_odyn_egress
          tunneling_config:
            hostname: '%DOWNSTREAM_DIRECT_REMOTE_ADDRESS_WITHOUT_PORT%:5432'
          access_log: *access_log_tcp
          access_log_options:
            flush_access_log_on_connected: true
  # service ingress listeners
  - name: ingress_proxy_api
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 8180
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filter_chain_match:
        transport_protocol: tls
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_proxy_api
          stream_idle_timeout: 900s
          access_log:
          - name: envoy.access_loggers.file
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              logFormat: &access_log_http
                jsonFormat:
                  authority: '%REQ(:AUTHORITY)%'
                  bytes_received: '%BYTES_RECEIVED%'
                  bytes_sent: '%BYTES_SENT%'
                  connection_termination_details: '%CONNECTION_TERMINATION_DETAILS%'
                  downstream_local_address: '%DOWNSTREAM_LOCAL_ADDRESS%'
                  downstream_remote_address: '%DOWNSTREAM_DIRECT_REMOTE_ADDRESS%'
                  downstream_wire_bytes_received: '%DOWNSTREAM_WIRE_BYTES_RECEIVED%'
                  downstream_wire_bytes_sent: '%DOWNSTREAM_WIRE_BYTES_SENT%'
                  duration: '%DURATION%'
                  method: '%REQ(:METHOD)%'
                  original_path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
                  path: '%REQ(:PATH)%'
                  protocol: '%PROTOCOL%'
                  request_duration: '%REQUEST_DURATION%'
                  request_id: '%REQ(X-REQUEST-ID)%'
                  requested_server_name: '%REQUESTED_SERVER_NAME%'
                  response_code: '%RESPONSE_CODE%'
                  response_code_details: '%RESPONSE_CODE_DETAILS%'
                  response_duration: '%RESPONSE_DURATION%'
                  route_name: '%ROUTE_NAME%'
                  start_time: '%START_TIME%'
                  upstream_cluster: '%UPSTREAM_CLUSTER%'
                  upstream_host: '%UPSTREAM_HOST%'
                  upstream_local_address: '%UPSTREAM_LOCAL_ADDRESS%'
                  upstream_request_attempt_count: '%UPSTREAM_REQUEST_ATTEMPT_COUNT%'
                  upstream_service_time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'
                  upstream_transport_failure_reason: '%UPSTREAM_TRANSPORT_FAILURE_REASON%'
                  upstream_wire_bytes_received: '%UPSTREAM_WIRE_BYTES_RECEIVED%'
                  upstream_wire_bytes_sent: '%UPSTREAM_WIRE_BYTES_SENT%'
          http_filters:
          - &http_compressor
            name: envoy.filters.http.compressor
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
              compressor_library:
                name: gzip_responses
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip
              response_direction_config:
                disable_on_etag_header: true
                remove_accept_encoding_header: true
          - &inline_attestation
            name: envoy.filters.http.ext_authz
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              http_service:
                server_uri:
                  uri: http://127.0.0.1:9901
                  cluster: attestation_proxy
                  timeout: 1s
                authorization_response:
                  allowed_client_headers_on_success:
                    patterns:
                    - exact: x-attestation-payload
              failure_mode_allow: true
              allowed_headers:
                patterns:
                - exact: x-attestation-nonce
                  ignore_case: true
                - exact: x-request-id
                  ignore_case: true
          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          upgrade_configs:
          - upgrade_type: websocket
          route_config:
            name: main
            virtual_hosts:
            - name: enchanted_proxy
              domains:
              - '*'
              routes:
              - name: enchanted_proxy_attestation
                match:
                  path: /-/attestation
                route:
                  cluster: attestation_proxy
                  timeout: 0s
                typed_per_filter_config: &disable_inline_attestation
                  envoy.filters.http.ext_authz:
                    '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
              - name: enchanted_proxy
                match:
                  prefix: /
                route:
                  cluster: enchanted_proxy
                  timeout: 0s
      transport_socket: &transport_socket_tls
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: /var/run/secrets/tls/tls.crt
              private_key:
                filename: /var/run/secrets/tls/tls.key
  - name: ingress_telegram_api
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 8181
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filter_chain_match:
        transport_protocol: tls
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_telegram_api
          stream_idle_timeout: 900s
          access_log:
          - name: envoy.access_loggers.file
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              logFormat: *access_log_http
          http_filters:
          - *http_compressor
          - *inline_attestation
          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          upgrade_configs:
          - upgrade_type: websocket
          route_config:
            name: main
            virtual_hosts:
            - name: enchanted_telegram_server
              domains:
              - '*'
              routes:
              - name: enchanted_telegram_server_attestation
                match:
                  path: /-/attestation
                route:
                  cluster: attestation_proxy
                  timeout: 0s
                typed_per_filter_config: *disable_inline_attestation
              - name: enchanted_telegram_server
                match:
                  prefix: /
                route:
                  cluster: enchanted_telegram_server
                  timeout: 0s
      transport_socket: *transport_socket_tls
  clusters:
  # admin interface
  - name: admin
    connect_timeout: 0.5s
    load_assignment:
      cluster_name: admin
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              pipe:
                path: '@envoy/admin'
  # attestation proxy endpoint
  - name: attestation_proxy
    connect_timeout: 0.5s
    circuit_breakers: &circuit_breakers
      thresholds:
      - max_connections: 102400
        max_pending_requests: 102400
        max_requests: 102400
        retry_budget:
          budget_percent:
            value: 50
    load_assignment:
      cluster_name: attestation_proxy
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 9901
  # internal inference endpoints
  - name: internal_glm-46
    load_assignment:
      cluster_name: internal_glm-46
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              envoy_internal_address:
                server_listener_name: internal_glm-46
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: glm-46.llm.eternisai.net
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: /etc/ssl/certs/eternis/llm-ca.pem
            watched_directory:
              path: /etc/ssl/certs/eternis
  # transparent proxy endpoint
  - name: enclaver_odyn_egress
    connect_timeout: 1s
    circuit_breakers: *circuit_breakers
    typed_extension_protocol_options: &typed_extension_protocol_options
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http_protocol_options: {}
    load_assignment:
      cluster_name: enclaver_odyn_egress
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 10000
  # service endpoints
  - name: enchanted_proxy
    connect_timeout: 1s
    circuit_breakers: *circuit_breakers
    typed_extension_protocol_options: *typed_extension_protocol_options
    load_assignment:
      cluster_name: enchanted_proxy
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8080
  - name: enchanted_telegram_server
    connect_timeout: 1s
    circuit_breakers: *circuit_breakers
    typed_extension_protocol_options: *typed_extension_protocol_options
    load_assignment:
      cluster_name: enchanted_telegram_server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 8081
